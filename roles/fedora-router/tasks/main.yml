---
# tasks file for fedora-router

- name: "fail if we are not running this playbook on Fedora Linux"
  fail:
    msg: "this playbook only tested on Fedora 27 or later!"
  when: ansible_os_family != "Fedora"

- name: "upgrade all packages"
  dnf: 
    name: "*"
    state: latest
    
- name: "install desired packages for playbook"
  package: name="{{ item }}" state=latest
  with_items: 
    - dnsmasq
    - tmux
    - chrony
    - python2-dnf
    - python-firewall
    - vim
    - htop
    - vnstat
    - fail2ban
    - fail2ban-firewalld

- name: "ensure directory /etc/systemd/network exists"
  file:
    path: /etc/systemd/network
    state: directory
    mode: 0755
    owner: root
    group: root
    
- name: "install eth0.network file"
  copy:
    src: etc/systemd/network/eth0.network
    dest: /etc/systemd/network/eth0.network
    owner: root
    group: root
    mode: 0644

- name: "install eth1.network file"
  copy:
    src: etc/systemd/network/eth1.network
    dest: /etc/systemd/network/eth1.network
    owner: root
    group: root
    mode: 0644
    
- name: "disable network scripts so to use systemd-networkd"
  systemd:
    name: network
    state: disabled

- name: "disable NetworkManager so to use systemd-networkd"
  systemd:
    name: NetworkManager
    state: disabled

- name: "enable systemd-networkd service"
  systemd:
    name: systemd-networkd
    enabled: true
    state: started
   
- name: "remove /etc/resolv.conf so to setup systemd-resolved symlink"
  file:
    path: /etc/resolv.conf
    state: absent
      
- name: "create symlink for systemd-resolved to /etc/resolv.conf"
  file:
    src: /run/systemd/resolve/resolv.conf
    dst: /etc/resolv.conf
    state: link

- name: "enable systemd-resolved service"
  systemd:
    name: systemd-resolved
    enabled: true
    state: started
      
- name: "install /etc/dnsmasq.conf file"
  copy:
    src: etc/dnsmasq.conf 
    dest: /etc/dnsmasq.conf
    owner: root
    group: root
    mode: 0644
  
- name: "enable dnsmasq service"
  systemd:
    name: dnsmasq
    enabled: true
    state: started
      
- name: "enable chronyd service (ntp)"
  systemd:
    name: chronyd
    enabled: true
    state: started

- name: "enable internal firewalld zone"
  firewalld:
    source: {{ lan_subnet_slash_cidr }}
    zone: internal
    state: enabled
    
- name: "enable masquerade in firewalld (internal)"
  firewalld:
    masquerade: yes
    permanent: true
    state: enabled
    zone: internal

- name: "allow dns in firewalld (internal)"
  firewalld: 
    service: dns 
    permanent: true
    state: enabled
    zone: internal
        
- name: "allow dhcp in firewalld (internal)"
  firewalld: 
    service: dhcp 
    permanent: true
    state: enabled    
    zone: internal      

- name: "allow ssh in firewalld (public)"
  firewalld: 
    service: sshd 
    permanent: true
    state: enabled    
    zone: public 
        
- name: "enable firewalld service"
  systemd: 
    name: firewalld
    enable: true
    state: started    

- name: "enable fail2ban service"
  systemd: 
    name: fail2ban
    enable: true
    state: started  
